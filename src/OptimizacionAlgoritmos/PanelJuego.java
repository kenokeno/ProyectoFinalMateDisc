/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package OptimizacionAlgoritmos;

import java.util.ArrayList;
import java.util.List;
import java.util.Random;
import javax.swing.JOptionPane;

/**
 *
 * @author alfredo
 */
public class PanelJuego extends javax.swing.JDialog {

    private boolean bandera;
    private byte conjuntoExito[][];
    private byte marca;
    private final String cruz = "/imagenes/tache.jpg";
    private final String circulo = "/imagenes/circulo.jpg";

    /**
     * Creates new form PanelJuego
     */
    public PanelJuego(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        bandera = true;
        conjuntoExito = new byte[8][3];
        marca = 1;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelJuego = new javax.swing.JPanel();
        C1 = new javax.swing.JButton();
        C2 = new javax.swing.JButton();
        C3 = new javax.swing.JButton();
        C4 = new javax.swing.JButton();
        C5 = new javax.swing.JButton();
        C6 = new javax.swing.JButton();
        C7 = new javax.swing.JButton();
        C8 = new javax.swing.JButton();
        C9 = new javax.swing.JButton();
        menuBarraPrincipal = new javax.swing.JMenuBar();
        menuPrincipal = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        C1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/blanco.jpg"))); // NOI18N
        C1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C1ActionPerformed(evt);
            }
        });

        C2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/blanco.jpg"))); // NOI18N
        C2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C2ActionPerformed(evt);
            }
        });

        C3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/blanco.jpg"))); // NOI18N
        C3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C3ActionPerformed(evt);
            }
        });

        C4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/blanco.jpg"))); // NOI18N
        C4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C4ActionPerformed(evt);
            }
        });

        C5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/blanco.jpg"))); // NOI18N
        C5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C5ActionPerformed(evt);
            }
        });

        C6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/blanco.jpg"))); // NOI18N
        C6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C6ActionPerformed(evt);
            }
        });

        C7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/blanco.jpg"))); // NOI18N
        C7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C7ActionPerformed(evt);
            }
        });

        C8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/blanco.jpg"))); // NOI18N
        C8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C8ActionPerformed(evt);
            }
        });

        C9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/blanco.jpg"))); // NOI18N
        C9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C9ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout panelJuegoLayout = new org.jdesktop.layout.GroupLayout(panelJuego);
        panelJuego.setLayout(panelJuegoLayout);
        panelJuegoLayout.setHorizontalGroup(
            panelJuegoLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(panelJuegoLayout.createSequentialGroup()
                .add(panelJuegoLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(C4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 151, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(C1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 151, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(C7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 151, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(12, 12, 12)
                .add(panelJuegoLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(panelJuegoLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(C2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 151, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(C5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 151, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(C8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 151, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(panelJuegoLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(C3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 151, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(C6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 151, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(C9, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 151, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
        );
        panelJuegoLayout.setVerticalGroup(
            panelJuegoLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(panelJuegoLayout.createSequentialGroup()
                .add(panelJuegoLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(C1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 124, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(C2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 124, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(C3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 124, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(panelJuegoLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(panelJuegoLayout.createSequentialGroup()
                        .add(C6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 124, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(C9, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 124, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(panelJuegoLayout.createSequentialGroup()
                        .add(C4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 124, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(C7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 124, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(panelJuegoLayout.createSequentialGroup()
                        .add(C5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 124, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(C8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 124, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
        );

        menuPrincipal.setText("Menu");

        jMenuItem1.setText("Salir");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        menuPrincipal.add(jMenuItem1);

        menuBarraPrincipal.add(menuPrincipal);

        setJMenuBar(menuBarraPrincipal);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(panelJuego, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(panelJuego, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void C1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C1ActionPerformed
        // TODO add your handling code here:
        // CHECO SI YA NO SELECCIONARON ESTA CASILLA
        if(conjuntoExito[0][0]!=0){
            return;
        }
        // CHECO QIE YA SE TERMINO EL JUEGO
        if (!bandera) {
            return;
        }
        // CHECO SI ESTA MARCANDO EL PLAYER O LA CPU
        // SI MARCA = 1 ES EL USUARIO SI NO LA CPU
        if (marca == 1) {
            C1.setIcon(new javax.swing.ImageIcon(getClass().getResource(cruz))); // NOI18N
            conjuntoExito[0][0] = marca;
            conjuntoExito[3][0] = marca;
            conjuntoExito[5][0] = marca;
            turnoCPU();
        } else {
            conjuntoExito[0][0] = marca;
            conjuntoExito[3][0] = marca;
            conjuntoExito[5][0] = marca;
        }
        repaint();
    }//GEN-LAST:event_C1ActionPerformed

    private void C2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C2ActionPerformed
        // TODO add your handling code here:
        // CHECO SI YA NO SELECCIONARON ESTA CASILLA
        if(conjuntoExito[0][1]!=0){
            return;
        }
        // CHECO QIE YA SE TERMINO EL JUEGO
        if (!bandera) {
            return;
        }
        // CHECO SI ESTA MARCANDO EL PLAYER O LA CPU
        // SI MARCA = 1 ES EL USUARIO SI NO LA CPU
        if (marca == 1) {
            C2.setIcon(new javax.swing.ImageIcon(getClass().getResource(cruz))); // NOI18N
            conjuntoExito[0][1] = marca;
            conjuntoExito[6][0] = marca;
            turnoCPU();
        } else {
            conjuntoExito[0][1] = marca;
            conjuntoExito[6][0] = marca;
        }
    }//GEN-LAST:event_C2ActionPerformed

    private void C3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C3ActionPerformed
        // TODO add your handling code here:
        // CHECO SI YA NO SELECCIONARON ESTA CASILLA
        if(conjuntoExito[0][2]!=0){
            return;
        }
        // CHECO QIE YA SE TERMINO EL JUEGO
        if (!bandera) {
            return;
        }
        // CHECO SI ESTA MARCANDO EL PLAYER O LA CPU
        // SI MARCA = 1 ES EL USUARIO SI NO LA CPU
        if (marca == 1) {
            C3.setIcon(new javax.swing.ImageIcon(getClass().getResource(cruz))); // NOI18N
            conjuntoExito[0][2] = marca;
            conjuntoExito[4][0] = marca;
            conjuntoExito[7][0] = marca;
            turnoCPU();
        } else {
            conjuntoExito[0][2] = marca;
            conjuntoExito[4][0] = marca;
            conjuntoExito[7][0] = marca;
        }
    }//GEN-LAST:event_C3ActionPerformed

    private void C4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C4ActionPerformed
        // TODO add your handling code here:
        // CHECO SI YA NO SELECCIONARON ESTA CASILLA
        if(conjuntoExito[1][0]!=0){
            return;
        }
        // CHECO QIE YA SE TERMINO EL JUEGO
        if (!bandera) {
            return;
        }
        // CHECO SI ESTA MARCANDO EL PLAYER O LA CPU
        // SI MARCA = 1 ES EL USUARIO SI NO LA CPU
        if (marca == 1) {
            C4.setIcon(new javax.swing.ImageIcon(getClass().getResource(cruz))); // NOI18N
            conjuntoExito[1][0] = marca;
            conjuntoExito[5][1] = marca;
            turnoCPU();
        } else {
            conjuntoExito[1][0] = marca;
            conjuntoExito[5][1] = marca;
        }
    }//GEN-LAST:event_C4ActionPerformed

    private void C5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C5ActionPerformed
        // TODO add your handling code here:
        // CHECO SI YA NO SELECCIONARON ESTA CASILLA
        if(conjuntoExito[1][1]!=0){
            return;
        }
        // CHECO QIE YA SE TERMINO EL JUEGO
        if (!bandera) {
            return;
        }
        // CHECO SI ESTA MARCANDO EL PLAYER O LA CPU
        // SI MARCA = 1 ES EL USUARIO SI NO LA CPU
        if (marca == 1) {
            C5.setIcon(new javax.swing.ImageIcon(getClass().getResource(cruz))); // NOI18N
            conjuntoExito[1][1] = marca;
            conjuntoExito[3][1] = marca;
            conjuntoExito[4][1] = marca;
            conjuntoExito[6][1] = marca;
            turnoCPU();
        } else {
            conjuntoExito[1][1] = marca;
            conjuntoExito[3][1] = marca;
            conjuntoExito[4][1] = marca;
            conjuntoExito[6][1] = marca;
        }
    }//GEN-LAST:event_C5ActionPerformed

    private void C6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C6ActionPerformed
        // TODO add your handling code here:
        // CHECO SI YA NO SELECCIONARON ESTA CASILLA
        if(conjuntoExito[1][2]!=0){
            return;
        }
        // CHECO QIE YA SE TERMINO EL JUEGO
        if (!bandera) {
            return;
        }
        // CHECO SI ESTA MARCANDO EL PLAYER O LA CPU
        // SI MARCA = 1 ES EL USUARIO SI NO LA CPU
        if (marca == 1) {
            C6.setIcon(new javax.swing.ImageIcon(getClass().getResource(cruz))); // NOI18N
            conjuntoExito[1][2] = marca;
            conjuntoExito[6][1] = marca;
            turnoCPU();
        } else {
            conjuntoExito[1][2] = marca;
            conjuntoExito[6][1] = marca;
        }
    }//GEN-LAST:event_C6ActionPerformed

    private void C7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C7ActionPerformed
        // TODO add your handling code here:
        // CHECO SI YA NO SELECCIONARON ESTA CASILLA
        if(conjuntoExito[2][0]!=0){
            return;
        }
        // CHECO QIE YA SE TERMINO EL JUEGO
        if (!bandera) {
            return;
        }
        // CHECO SI ESTA MARCANDO EL PLAYER O LA CPU
        // SI MARCA = 1 ES EL USUARIO SI NO LA CPU
        if (marca == 1) {
            C7.setIcon(new javax.swing.ImageIcon(getClass().getResource(cruz))); // NOI18N
            conjuntoExito[2][0] = marca;
            conjuntoExito[4][2] = marca;
            conjuntoExito[5][2] = marca;
            turnoCPU();
        } else {
            conjuntoExito[2][0] = marca;
            conjuntoExito[4][2] = marca;
            conjuntoExito[5][2] = marca;
        }
    }//GEN-LAST:event_C7ActionPerformed

    private void C8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C8ActionPerformed
        // TODO add your handling code here:
        // CHECO SI YA NO SELECCIONARON ESTA CASILLA
        if(conjuntoExito[2][1]!=0){
            return;
        }
        // CHECO QIE YA SE TERMINO EL JUEGO
        if (!bandera) {
            return;
        }
        // CHECO SI ESTA MARCANDO EL PLAYER O LA CPU
        // SI MARCA = 1 ES EL USUARIO SI NO LA CPU
        if (marca == 1) {
            C8.setIcon(new javax.swing.ImageIcon(getClass().getResource(cruz))); // NOI18N
            conjuntoExito[2][1] = marca;
            conjuntoExito[6][2] = marca;
            turnoCPU();
        } else {
            conjuntoExito[2][1] = marca;
            conjuntoExito[6][2] = marca;
        }
    }//GEN-LAST:event_C8ActionPerformed

    private void C9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C9ActionPerformed
        // TODO add your handling code here:
        // CHECO SI YA NO SELECCIONARON ESTA CASILLA
        if(conjuntoExito[2][2]!=0){
            return;
        }
        // CHECO QIE YA SE TERMINO EL JUEGO
        if (!bandera) {
            return;
        }
        // CHECO SI ESTA MARCANDO EL PLAYER O LA CPU
        // SI MARCA = 1 ES EL USUARIO SI NO LA CPU
        if (marca == 1) {
            C9.setIcon(new javax.swing.ImageIcon(getClass().getResource(cruz))); // NOI18N
            conjuntoExito[2][2] = marca;
            conjuntoExito[3][2] = marca;
            conjuntoExito[7][2] = marca;
            turnoCPU();
        } else {
            conjuntoExito[2][2] = marca;
            conjuntoExito[3][2] = marca;
            conjuntoExito[7][2] = marca;
        }
    }//GEN-LAST:event_C9ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    /*
     * CHECO SI ALGUIEN GANO
     * ACTOR = 1 ES EL USUARIO
     * ACTOR = 2 ES LA CPU
     */
    private void ganador(int actor) {
        for (int i = 0; i < conjuntoExito.length; i++) {
            if (conjuntoExito[i][0] == actor && conjuntoExito[i][1] == actor && conjuntoExito[i][2] == actor) {
                if (actor == 1) {
                    JOptionPane.showMessageDialog(null, "Ganador: Player", null, actor);
                } else {
                    JOptionPane.showMessageDialog(null, "Ganador: CPU", null, actor);
                }
                bandera = false;
                break;
            }
        }
    }

    /*
     * ES EL ALGORITMO PRINCIPAL DONDE LA CPU DECIDE DONDE MARCAR
     */
    private void turnoCPU() {
        // VERIFICO QUE NO HAYA GANADO YA EL USUARIO
        ganador(1);
        // PRIMERO VERIFICO SI NO HAY UN LUGAR DONDE PUEDE GANAR EL USUARIO
        byte opcion = triunfoProbable((byte) 1);
        if (opcion == -1) {
            // SI NO TIENE DONDE GANAR VEO SI TENGO UN LUGAR DONDE GANAR
            opcion = triunfoProbable((byte) 2);
            if (opcion == -1) {
                // SI NO TIENE DONDE GANAR LA CPU MARCA ALEATORIAMENTE DONDE PUEDE MARCAR
                opcion = obtenerConjuntoLibre();
            }
        }
        // MARCA LA CPU EL LUGAR CALCULADO EN LOS PASOS ANTERIORES
        tiraCPU(opcion);
    }

    private void tiraCPU(byte opcion) {
        marcaCPU(opcion, obtenerLibre(opcion));
        ganador(2);
        imprimirMatrizExito();
    }

    private void imprimirMatrizExito() {
        for (int i = 0; i < conjuntoExito.length; i++) {
            for (int j = 0; j < conjuntoExito[i].length; j++) {
                System.out.print(" " + conjuntoExito[i][j]);
            }
            System.out.println("");
        }
    }

    private byte triunfoProbable(byte actor) {
        for (int i = 0; i < conjuntoExito.length; i++) {
            if (conjuntoExito[i][0] == actor && conjuntoExito[i][1] == actor && conjuntoExito[i][2] == 0
                    || conjuntoExito[i][1] == actor && conjuntoExito[i][2] == actor && conjuntoExito[i][0] == 0
                    || conjuntoExito[i][0] == actor && conjuntoExito[i][2] == actor && conjuntoExito[i][1] == 0) {
                System.out.println("Fila por ganar del player: " + i);
                return (byte) i;
            }
        }
        return -1;
    }

    private byte obtenerConjuntoLibre() {
        List<Integer> listaLibre = new ArrayList<Integer>();
        for (int i = 0; i < conjuntoExito.length; i++) {
            if (conjuntoExito[i][0] == 0 && conjuntoExito[i][1] == 0 && conjuntoExito[i][2] == 0) {
                listaLibre.add(i);
            }
        }
        if (listaLibre.isEmpty()) {
            for (int i = 0; i < conjuntoExito.length; i++) {
                if (conjuntoExito[i][0] == 0 || conjuntoExito[i][1] == 0 || conjuntoExito[i][2] == 0) {
                    listaLibre.add(i);
                }
            }
        }
        if (listaLibre.size() > 0) {
            Random rnd = new Random();
            int i = listaLibre.get((int) (rnd.nextDouble() * listaLibre.size()));
            return (byte) i;
        }
        return -1;
    }

    private int obtenerLibre(int i) {
        for (int j = 0; j < conjuntoExito[i].length; j++) {
            if (conjuntoExito[i][j] == 0) {
                return j;
            }
        }
        return -1;
    }

    private void marcaCPU(int i, int j) {
        System.out.println("i: " + i + " j: " + j);
        if (i == 0 && j == 0
                || i == 3 && j == 0
                || i == 5 && j == 0) {
            C1.setIcon(new javax.swing.ImageIcon(getClass().getResource(circulo)));
            marca = 2;
            C1ActionPerformed(null);
            marca = 1;
            return;
        }
        if (i == 0 && j == 1
                || i == 6 && j == 0) {
            C2.setIcon(new javax.swing.ImageIcon(getClass().getResource(circulo)));
            marca = 2;
            C2ActionPerformed(null);
            marca = 1;
            return;
        }
        if (i == 0 && j == 2
                || i == 4 && j == 0
                || i == 7 && j == 0) {
            C3.setIcon(new javax.swing.ImageIcon(getClass().getResource(circulo)));
            marca = 2;
            C3ActionPerformed(null);
            marca = 1;
            return;
        }
        if (i == 1 && j == 0
                || i == 5 && j == 1) {
            C4.setIcon(new javax.swing.ImageIcon(getClass().getResource(circulo)));
            marca = 2;
            C4ActionPerformed(null);
            marca = 1;
            return;
        }
        if (i == 1 && j == 1
                || i == 3 && j == 1
                || i == 4 && j == 1
                || i == 6 && j == 1) {
            C5.setIcon(new javax.swing.ImageIcon(getClass().getResource(circulo)));
            marca = 2;
            C5ActionPerformed(null);
            marca = 1;
            return;
        }
        if (i == 1 && j == 2
                || i == 6 && j == 1) {
            C6.setIcon(new javax.swing.ImageIcon(getClass().getResource(circulo)));
            marca = 2;
            C6ActionPerformed(null);
            marca = 1;
            return;
        }
        if (i == 2 && j == 0
                || i == 4 && j == 2
                || i == 5 && j == 2) {
            C7.setIcon(new javax.swing.ImageIcon(getClass().getResource(circulo)));
            marca = 2;
            C7ActionPerformed(null);
            marca = 1;
            return;
        }
        if (i == 2 && j == 1
                || i == 6 && j == 2) {
            C8.setIcon(new javax.swing.ImageIcon(getClass().getResource(circulo)));
            marca = 2;
            C8ActionPerformed(null);
            marca = 1;
            return;
        }
        if (i == 2 && j == 2
                || i == 3 && j == 2
                || i == 7 && j == 2) {
            C9.setIcon(new javax.swing.ImageIcon(getClass().getResource(circulo)));
            marca = 2;
            C9ActionPerformed(null);
            marca = 1;
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton C1;
    private javax.swing.JButton C2;
    private javax.swing.JButton C3;
    private javax.swing.JButton C4;
    private javax.swing.JButton C5;
    private javax.swing.JButton C6;
    private javax.swing.JButton C7;
    private javax.swing.JButton C8;
    private javax.swing.JButton C9;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuBar menuBarraPrincipal;
    private javax.swing.JMenu menuPrincipal;
    private javax.swing.JPanel panelJuego;
    // End of variables declaration//GEN-END:variables
}
